{"version":3,"sources":["../src/registry/schema.ts"],"names":["registryItemTypeSchema","z","registryItemFileSchema","registryItemTailwindSchema","registryItemCssVarsSchema","registryItemCssSchema","registryItemEnvVarsSchema","registryItemSchema","registrySchema","registryIndexSchema","stylesSchema","iconsSchema","registryBaseColorSchema","registryResolvedItemsTreeSchema","registryConfigItemSchema","s","registryConfigSchema","key","rawConfigSchema","configSchema","workspaceConfigSchema","searchResultItemSchema","searchResultsSchema"],"mappings":"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","file":"chunk-VVOKVGPU.js","sourcesContent":["import { z } from \"zod\"\n\n// Note: if you edit the schema here, you must also edit the schema in the\n// apps/www/public/schema/registry-item.json file.\n\nexport const registryItemTypeSchema = z.enum([\n  \"registry:lib\",\n  \"registry:block\",\n  \"registry:component\",\n  \"registry:ui\",\n  \"registry:hook\",\n  \"registry:page\",\n  \"registry:file\",\n  \"registry:theme\",\n  \"registry:style\",\n  \"registry:item\",\n\n  // Internal use only\n  \"registry:example\",\n  \"registry:internal\",\n])\n\nexport const registryItemFileSchema = z.discriminatedUnion(\"type\", [\n  // Target is required for registry:file and registry:page\n  z.object({\n    path: z.string(),\n    content: z.string().optional(),\n    type: z.enum([\"registry:file\", \"registry:page\"]),\n    target: z.string(),\n  }),\n  z.object({\n    path: z.string(),\n    content: z.string().optional(),\n    type: registryItemTypeSchema.exclude([\"registry:file\", \"registry:page\"]),\n    target: z.string().optional(),\n  }),\n])\n\nexport const registryItemTailwindSchema = z.object({\n  config: z\n    .object({\n      content: z.array(z.string()).optional(),\n      theme: z.record(z.string(), z.any()).optional(),\n      plugins: z.array(z.string()).optional(),\n    })\n    .optional(),\n})\n\nexport const registryItemCssVarsSchema = z.object({\n  theme: z.record(z.string(), z.string()).optional(),\n  light: z.record(z.string(), z.string()).optional(),\n  dark: z.record(z.string(), z.string()).optional(),\n})\n\nexport const registryItemCssSchema = z.record(\n  z.string(),\n  z.lazy(() =>\n    z.union([\n      z.string(),\n      z.record(\n        z.string(),\n        z.union([z.string(), z.record(z.string(), z.string())])\n      ),\n    ])\n  )\n)\n\nexport const registryItemEnvVarsSchema = z.record(z.string(), z.string())\n\nexport const registryItemSchema = z.object({\n  $schema: z.string().optional(),\n  extends: z.string().optional(),\n  name: z.string(),\n  type: registryItemTypeSchema,\n  title: z.string().optional(),\n  author: z.string().min(2).optional(),\n  description: z.string().optional(),\n  dependencies: z.array(z.string()).optional(),\n  devDependencies: z.array(z.string()).optional(),\n  registryDependencies: z.array(z.string()).optional(),\n  files: z.array(registryItemFileSchema).optional(),\n  tailwind: registryItemTailwindSchema.optional(),\n  cssVars: registryItemCssVarsSchema.optional(),\n  css: registryItemCssSchema.optional(),\n  envVars: registryItemEnvVarsSchema.optional(),\n  meta: z.record(z.string(), z.any()).optional(),\n  docs: z.string().optional(),\n  categories: z.array(z.string()).optional(),\n})\n\nexport type RegistryItem = z.infer<typeof registryItemSchema>\n\nexport const registrySchema = z.object({\n  name: z.string(),\n  homepage: z.string(),\n  items: z.array(registryItemSchema),\n})\n\nexport type Registry = z.infer<typeof registrySchema>\n\nexport const registryIndexSchema = z.array(registryItemSchema)\n\nexport const stylesSchema = z.array(\n  z.object({\n    name: z.string(),\n    label: z.string(),\n  })\n)\n\nexport const iconsSchema = z.record(\n  z.string(),\n  z.record(z.string(), z.string())\n)\n\nexport const registryBaseColorSchema = z.object({\n  inlineColors: z.object({\n    light: z.record(z.string(), z.string()),\n    dark: z.record(z.string(), z.string()),\n  }),\n  cssVars: registryItemCssVarsSchema,\n  cssVarsV4: registryItemCssVarsSchema.optional(),\n  inlineColorsTemplate: z.string(),\n  cssVarsTemplate: z.string(),\n})\n\nexport const registryResolvedItemsTreeSchema = registryItemSchema.pick({\n  dependencies: true,\n  devDependencies: true,\n  files: true,\n  tailwind: true,\n  cssVars: true,\n  css: true,\n  envVars: true,\n  docs: true,\n})\n\nexport const registryConfigItemSchema = z.union([\n  // Simple string format: \"https://example.com/{name}.json\"\n  z.string().refine((s) => s.includes(\"{name}\"), {\n    message: \"Registry URL must include {name} placeholder\",\n  }),\n  // Advanced object format with auth options\n  z.object({\n    url: z.string().refine((s) => s.includes(\"{name}\"), {\n      message: \"Registry URL must include {name} placeholder\",\n    }),\n    params: z.record(z.string(), z.string()).optional(),\n    headers: z.record(z.string(), z.string()).optional(),\n  }),\n])\n\nexport const registryConfigSchema = z.record(\n  z.string().refine((key) => key.startsWith(\"@\"), {\n    message: \"Registry names must start with @ (e.g., @v0, @acme)\",\n  }),\n  registryConfigItemSchema\n)\n\nexport const rawConfigSchema = z\n  .object({\n    $schema: z.string().optional(),\n    style: z.string(),\n    rsc: z.coerce.boolean().default(false),\n    tsx: z.coerce.boolean().default(true),\n    tailwind: z.object({\n      config: z.string().optional(),\n      css: z.string(),\n      baseColor: z.string(),\n      cssVariables: z.boolean().default(true),\n      prefix: z.string().default(\"\").optional(),\n    }),\n    iconLibrary: z.string().optional(),\n    aliases: z.object({\n      components: z.string(),\n      utils: z.string(),\n      ui: z.string().optional(),\n      lib: z.string().optional(),\n      hooks: z.string().optional(),\n    }),\n    registries: registryConfigSchema.optional(),\n  })\n  .strict()\n\nexport const configSchema = rawConfigSchema.extend({\n  resolvedPaths: z.object({\n    cwd: z.string(),\n    tailwindConfig: z.string(),\n    tailwindCss: z.string(),\n    utils: z.string(),\n    components: z.string(),\n    lib: z.string(),\n    hooks: z.string(),\n    ui: z.string(),\n  }),\n})\n\n// TODO: type the key.\n// Okay for now since I don't want a breaking change.\nexport const workspaceConfigSchema = z.record(configSchema)\n\nexport const searchResultItemSchema = z.object({\n  name: z.string(),\n  type: z.string().optional(),\n  description: z.string().optional(),\n  registry: z.string(),\n  addCommandArgument: z.string(),\n})\n\nexport const searchResultsSchema = z.object({\n  pagination: z.object({\n    total: z.number(),\n    offset: z.number(),\n    limit: z.number(),\n    hasMore: z.boolean(),\n  }),\n  items: z.array(searchResultItemSchema),\n})\n"]}